{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{BarChart,Bar,XAxis,YAxis,CartesianGrid,Tooltip,Legend,ResponsiveContainer,PieChart,Pie,Cell}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DashboardPage=()=>{var _dashboardData$metric,_dashboardData$conten;const[dashboardData,setDashboardData]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const COLORS=['#0088FE','#00C49F','#FFBB28','#FF8042','#8884d8'];useEffect(()=>{const fetchDashboardData=async()=>{try{const response=await axios.get('api/dashboard/summary');setDashboardData(response.data);setLoading(false);}catch(err){setError('Failed to load dashboard data');setLoading(false);}};fetchDashboardData();},[]);if(loading)return/*#__PURE__*/_jsx(\"div\",{className:\"text-center p-10\",children:\"Loading dashboard...\"});if(error)return/*#__PURE__*/_jsx(\"div\",{className:\"text-center p-10 text-red-500\",children:error});if(!dashboardData)return/*#__PURE__*/_jsx(\"div\",{className:\"text-center p-10\",children:\"No data available\"});// Formatting platform distribution data for charts\nconst platformData=Object.entries(dashboardData.platforms.platformDistribution||{}).map(_ref=>{let[name,value]=_ref;return{name,value};});// Formatting content type distribution\nconst contentTypeData=Object.entries(dashboardData.content.contentTypeDistribution||{}).map(_ref2=>{let[name,value]=_ref2;return{name,value};});return/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-3xl font-bold mb-6\",children:\"Analytics Dashboard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-2\",children:\"Platforms\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold\",children:dashboardData.platforms.totalPlatforms}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"Connected platforms\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-2\",children:\"Content\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-3xl font-bold\",children:dashboardData.content.totalContent}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"Total content pieces\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-2\",children:\"Engagement\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-3xl font-bold\",children:[(_dashboardData$metric=dashboardData.metrics.averageEngagementRate)===null||_dashboardData$metric===void 0?void 0:_dashboardData$metric.toFixed(2),\"%\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"Average engagement rate\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Platform Distribution\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(PieChart,{children:[/*#__PURE__*/_jsx(Pie,{data:platformData,cx:\"50%\",cy:\"50%\",labelLine:false,outerRadius:100,fill:\"#8884d8\",dataKey:\"value\",label:_ref3=>{let{name,percent}=_ref3;return`${name} ${(percent*100).toFixed(0)}%`;},children:platformData.map((entry,index)=>/*#__PURE__*/_jsx(Cell,{fill:COLORS[index%COLORS.length]},`cell-${index}`))}),/*#__PURE__*/_jsx(Tooltip,{})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Content Type Distribution\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:300,children:/*#__PURE__*/_jsxs(BarChart,{data:contentTypeData,children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"name\"}),/*#__PURE__*/_jsx(YAxis,{}),/*#__PURE__*/_jsx(Tooltip,{}),/*#__PURE__*/_jsx(Legend,{}),/*#__PURE__*/_jsx(Bar,{dataKey:\"value\",fill:\"#8884d8\"})]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow p-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Recent Content\"}),((_dashboardData$conten=dashboardData.content.recentContent)===null||_dashboardData$conten===void 0?void 0:_dashboardData$conten.length)>0?/*#__PURE__*/_jsxs(\"table\",{className:\"min-w-full\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"bg-gray-100\",children:[/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left\",children:\"Title\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left\",children:\"Platform\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left\",children:\"Type\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left\",children:\"Published\"}),/*#__PURE__*/_jsx(\"th\",{className:\"py-2 px-4 text-left\",children:\"Views\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:dashboardData.content.recentContent.map((content,index)=>/*#__PURE__*/_jsxs(\"tr\",{className:index%2===0?'bg-gray-50':'',children:[/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4\",children:content.title}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4\",children:content.platform.platformName}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4\",children:content.contentType}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4\",children:new Date(content.publishedDate).toLocaleDateString()}),/*#__PURE__*/_jsx(\"td\",{className:\"py-2 px-4\",children:\"-\"})]},index))})]}):/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-500\",children:\"No recent content available\"})]})]});};export default DashboardPage;","map":{"version":3,"names":["React","useState","useEffect","axios","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","jsx","_jsx","jsxs","_jsxs","DashboardPage","_dashboardData$metric","_dashboardData$conten","dashboardData","setDashboardData","loading","setLoading","error","setError","COLORS","fetchDashboardData","response","get","data","err","className","children","platformData","Object","entries","platforms","platformDistribution","map","_ref","name","value","contentTypeData","content","contentTypeDistribution","_ref2","totalPlatforms","totalContent","metrics","averageEngagementRate","toFixed","width","height","cx","cy","labelLine","outerRadius","fill","dataKey","label","_ref3","percent","entry","index","length","strokeDasharray","recentContent","title","platform","platformName","contentType","Date","publishedDate","toLocaleDateString"],"sources":["E:/Official/University/Content Analytics v4/Content-Analytics-System/frontend/src/components/Dashboard/DashboardPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n    PieChart, Pie, Cell,\r\n} from 'recharts';\r\n\r\nconst DashboardPage = () => {\r\n    const [dashboardData, setDashboardData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\r\n\r\n    useEffect(() => {\r\n        const fetchDashboardData = async () => {\r\n            try {\r\n                const response = await axios.get('api/dashboard/summary');\r\n                setDashboardData(response.data);\r\n                setLoading(false);\r\n            } catch(err) {\r\n                setError('Failed to load dashboard data');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchDashboardData();\r\n    }, []);\r\n\r\n    if (loading) return <div className=\"text-center p-10\">Loading dashboard...</div>;\r\n    if (error) return <div className=\"text-center p-10 text-red-500\">{error}</div>;\r\n    if (!dashboardData) return <div className=\"text-center p-10\">No data available</div>;\r\n\r\n    // Formatting platform distribution data for charts\r\n    const platformData = Object.entries(dashboardData.platforms.platformDistribution || {}).map(\r\n        ([name, value]) => ({name, value})\r\n    );\r\n\r\n    // Formatting content type distribution\r\n    const contentTypeData = Object.entries(dashboardData.content.contentTypeDistribution || {}).map(\r\n        ([name, value]) => ({name, value})\r\n    );\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Analytics Dashboard</h1>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n                {/* Platform Stats Card */}\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Platforms</h2>\r\n                    <p className=\"text-3xl font-bold\">{dashboardData.platforms.totalPlatforms}</p>\r\n                    <p className=\"text-gray-500\">Connected platforms</p>\r\n                </div>\r\n\r\n                {/* Content Stats Card */}\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Content</h2>\r\n                    <p className=\"text-3xl font-bold\">{dashboardData.content.totalContent}</p>\r\n                    <p className=\"text-gray-500\">Total content pieces</p>\r\n                </div>\r\n\r\n                {/* Engagement Stats Card */}\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Engagement</h2>\r\n                    <p className=\"text-3xl font-bold\">{dashboardData.metrics.averageEngagementRate?.toFixed(2)}%</p>\r\n                    <p className=\"text-gray-500\">Average engagement rate</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\r\n                {/* Platform Distribution Chart */}\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-4\">Platform Distribution</h2>\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <PieChart>\r\n                            <Pie\r\n                                data={platformData}\r\n                                cx=\"50%\"\r\n                                cy=\"50%\"\r\n                                labelLine={false}\r\n                                outerRadius={100}\r\n                                fill=\"#8884d8\"\r\n                                dataKey=\"value\"\r\n                                label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\r\n                            >\r\n                                {platformData.map((entry, index) => (\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                ))}\r\n                            </Pie>\r\n                            <Tooltip />\r\n                        </PieChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n\r\n                {/* Content Type Distribution Chart */}\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-4\">Content Type Distribution</h2>\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <BarChart data={contentTypeData}>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            <Bar dataKey=\"value\" fill=\"#8884d8\" />\r\n                        </BarChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Recent Content Section */}\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n                <h2 className=\"text-xl font-semibold mb-4\">Recent Content</h2>\r\n                {dashboardData.content.recentContent?.length > 0 ? (\r\n                    <table className=\"min-w-full\">\r\n                        <thead>\r\n                        <tr className=\"bg-gray-100\">\r\n                            <th className=\"py-2 px-4 text-left\">Title</th>\r\n                            <th className=\"py-2 px-4 text-left\">Platform</th>\r\n                            <th className=\"py-2 px-4 text-left\">Type</th>\r\n                            <th className=\"py-2 px-4 text-left\">Published</th>\r\n                            <th className=\"py-2 px-4 text-left\">Views</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {dashboardData.content.recentContent.map((content, index) => (\r\n                            <tr key={index} className={index % 2 === 0 ? 'bg-gray-50' : ''}>\r\n                                <td className=\"py-2 px-4\">{content.title}</td>\r\n                                <td className=\"py-2 px-4\">{content.platform.platformName}</td>\r\n                                <td className=\"py-2 px-4\">{content.contentType}</td>\r\n                                <td className=\"py-2 px-4\">\r\n                                    {new Date(content.publishedDate).toLocaleDateString()}\r\n                                </td>\r\n                                <td className=\"py-2 px-4\">-</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                ) : (\r\n                    <p className=\"text-gray-500\">No recent content available</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}