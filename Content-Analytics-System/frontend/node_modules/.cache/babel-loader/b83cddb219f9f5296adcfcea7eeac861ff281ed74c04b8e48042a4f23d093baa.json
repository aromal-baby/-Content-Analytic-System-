{"ast":null,"code":"import axios from 'axios';\n\n// Creating an axios instance\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api'\n});\n\n// Adding a request instance\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  console.log(\"API call with token present:\", !!token);\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  console.error(\"API error:\", error.response ? error.response.status : \"No response\", error.response ? error.response.data : error.message);\n\n  // Handle 401 response\n  if (error.response && error.response.status === 401) {\n    // Clearing token and redirecting to login\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","console","log","headers","error","Promise","reject","response","status","data","message","removeItem","window","location","href"],"sources":["E:/Official/University/Content Analytics v4/Content-Analytics-System/frontend/src/services/ApiService.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Creating an axios instance\r\nconst api = axios.create({\r\n    baseURL: 'http://localhost:8080/api',\r\n});\r\n\r\n// Adding a request instance\r\napi.interceptors.request.use(\r\n    config => {\r\n        const token = localStorage.getItem('token');\r\n        console.log(\"API call with token present:\", !!token);\r\n        if (token) {\r\n            config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n    response => {\r\n        return response;\r\n    },\r\n    error => {\r\n        console.error(\"API error:\", error.response ? error.response.status : \"No response\",\r\n            error.response ? error.response.data : error.message);\r\n\r\n        // Handle 401 response\r\n        if (error.response && error.response.status === 401) {\r\n            // Clearing token and redirecting to login\r\n            localStorage.removeItem('token');\r\n            window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE;AACb,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CACxBC,MAAM,IAAI;EACN,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE,CAAC,CAACJ,KAAK,CAAC;EACpD,IAAIA,KAAK,EAAE;IACPD,MAAM,CAACM,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUL,KAAK,EAAE;EACvD;EACA,OAAOD,MAAM;AACjB,CAAC,EACDO,KAAK,IAAI;EACL,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;;AAED;AACAb,GAAG,CAACG,YAAY,CAACa,QAAQ,CAACX,GAAG,CACzBW,QAAQ,IAAI;EACR,OAAOA,QAAQ;AACnB,CAAC,EACDH,KAAK,IAAI;EACLH,OAAO,CAACG,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACG,QAAQ,GAAGH,KAAK,CAACG,QAAQ,CAACC,MAAM,GAAG,aAAa,EAC9EJ,KAAK,CAACG,QAAQ,GAAGH,KAAK,CAACG,QAAQ,CAACE,IAAI,GAAGL,KAAK,CAACM,OAAO,CAAC;;EAEzD;EACA,IAAIN,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;IACjD;IACAT,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACnC;EACA,OAAOT,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}