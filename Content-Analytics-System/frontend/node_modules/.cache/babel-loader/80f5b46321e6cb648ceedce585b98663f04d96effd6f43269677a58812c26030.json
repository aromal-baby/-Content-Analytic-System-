{"ast":null,"code":"var _jsxFileName = \"E:\\\\Official\\\\University\\\\Content Analytics v4\\\\Content-Analytics-System\\\\frontend\\\\src\\\\components\\\\Dashboard\\\\DashboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from '../../services/ApiService';\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  var _dashboardData$platfo, _dashboardData$conten, _dashboardData$platfo3, _dashboardData$conten3, _dashboardData$metric, _dashboardData$metric2, _dashboardData$conten4, _dashboardData$conten5;\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        // Use the correct API client and relative URL\n        const response = await api.get('/dashboard/summary');\n        console.log(\"Raw data:\", JSON.stringify(response.data));\n\n        // Add explicit logging of content\n        if (response.data.content) {\n          console.log(\"CONTENT SECTION:\", response.data.content);\n          console.log(\"RECENT CONTENT:\", response.data.content.recentContent || []);\n        }\n        setDashboardData(response.data);\n        setLoading(false);\n      } catch (err) {\n        console.error(\"Dashboard error:\", err);\n        setError('Failed to load dashboard data');\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-10\",\n    children: \"Loading dashboard...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-10 text-red-500\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 23\n  }, this);\n  if (!dashboardData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-10\",\n    children: \"No dashboard data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 32\n  }, this);\n\n  // Add safety checks for all data access\n  const totalPlatform = ((_dashboardData$platfo = dashboardData.platforms) === null || _dashboardData$platfo === void 0 ? void 0 : _dashboardData$platfo.totalPlatforms) || 0;\n  const totalContent = ((_dashboardData$conten = dashboardData.content) === null || _dashboardData$conten === void 0 ? void 0 : _dashboardData$conten.totalContents) || 0;\n  const platformData = (() => {\n    try {\n      var _dashboardData$platfo2;\n      // Extract platform distribution data\n      const distribution = ((_dashboardData$platfo2 = dashboardData.platforms) === null || _dashboardData$platfo2 === void 0 ? void 0 : _dashboardData$platfo2.platformDistribution) || {};\n\n      // Convert to array format needed by charts\n      const formattedData = Object.entries(distribution).map(([name, value]) => ({\n        name,\n        value: Number(value)\n      }));\n\n      // Add placeholder if empty\n      return formattedData.length > 0 ? formattedData : [{\n        name: 'No Platforms',\n        value: 1\n      }];\n    } catch (err) {\n      console.error(\"Error formatting platform data:\", err);\n      return [{\n        name: 'No Platforms',\n        value: 1\n      }];\n    }\n  })();\n  const contentTypeData = (() => {\n    try {\n      var _dashboardData$conten2;\n      // Extract content type distribution\n      const distribution = ((_dashboardData$conten2 = dashboardData.content) === null || _dashboardData$conten2 === void 0 ? void 0 : _dashboardData$conten2.contentTypeDistribution) || {};\n\n      // Convert to array format needed by charts\n      const formattedData = Object.entries(distribution).map(([name, value]) => ({\n        name: name.replace(/_/g, ' ').toLowerCase().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' '),\n        value: Number(value)\n      }));\n\n      // Add placeholder if empty\n      return formattedData.length > 0 ? formattedData : [{\n        name: 'No Content',\n        value: 1\n      }];\n    } catch (err) {\n      console.error(\"Error formatting content type data:\", err);\n      return [{\n        name: 'No Content',\n        value: 1\n      }];\n    }\n  })();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Analytics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Platforms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-3xl font-bold\",\n          children: (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$platfo3 = dashboardData.platforms) === null || _dashboardData$platfo3 === void 0 ? void 0 : _dashboardData$platfo3.totalPlatforms) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Connected platforms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-3xl font-bold\",\n          children: (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$conten3 = dashboardData.content) === null || _dashboardData$conten3 === void 0 ? void 0 : _dashboardData$conten3.totalContents) || 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Total content pieces\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-2\",\n          children: \"Engagement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-3xl font-bold\",\n          children: [((_dashboardData$metric = dashboardData.metrics) === null || _dashboardData$metric === void 0 ? void 0 : (_dashboardData$metric2 = _dashboardData$metric.averageEngagementRate) === null || _dashboardData$metric2 === void 0 ? void 0 : _dashboardData$metric2.toFixed(2)) || '0.00', \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Average engagement rate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Platform Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(PieChart, {\n            style: {\n              zIndex: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(Pie, {\n              data: platformData,\n              cx: \"50%\",\n              cy: \"50%\",\n              labelLine: false,\n              outerRadius: 100,\n              fill: \"#8884d8\",\n              dataKey: \"value\",\n              label: ({\n                name,\n                percent\n              }) => platformData[0].name === 'No Platforms' ? 'No platforms connected yet' : `${name} ${(percent * 100).toFixed(0)}%`,\n              style: {\n                zIndex: 10\n              },\n              children: platformData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                fill: COLORS[index % COLORS.length]\n              }, `cell-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow p-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-xl font-semibold mb-4\",\n          children: \"Content Type Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n          width: \"100%\",\n          height: 300,\n          children: /*#__PURE__*/_jsxDEV(BarChart, {\n            data: contentTypeData,\n            children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n              strokeDasharray: \"3 3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n              dataKey: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: \"value\",\n              fill: \"#8884d8\",\n              name: \"Content Count\",\n              label: contentTypeData[0].name === 'No Content' ? {\n                value: 'No content added yet',\n                position: 'center'\n              } : {\n                position: 'top'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-4\",\n        children: \"Recent Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), (dashboardData === null || dashboardData === void 0 ? void 0 : (_dashboardData$conten4 = dashboardData.content) === null || _dashboardData$conten4 === void 0 ? void 0 : (_dashboardData$conten5 = _dashboardData$conten4.recentContent) === null || _dashboardData$conten5 === void 0 ? void 0 : _dashboardData$conten5.length) > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-gray-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 text-left\",\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 text-left\",\n              children: \"Platform\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 text-left\",\n              children: \"Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 text-left\",\n              children: \"Published\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 text-left\",\n              children: \"Views\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dashboardData.content.recentContent.map((content, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: index % 2 === 0 ? 'bg-gray-50' : '',\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4\",\n              children: content.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4\",\n              children: content.platform.platformName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4\",\n              children: content.contentType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4\",\n              children: new Date(content.publishedDate).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500\",\n        children: \"No recent content available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardPage, \"sxFeAcwAVC244uU+brsBFLqW91s=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","api","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","jsxDEV","_jsxDEV","DashboardPage","_s","_dashboardData$platfo","_dashboardData$conten","_dashboardData$platfo3","_dashboardData$conten3","_dashboardData$metric","_dashboardData$metric2","_dashboardData$conten4","_dashboardData$conten5","dashboardData","setDashboardData","loading","setLoading","error","setError","COLORS","fetchDashboardData","response","get","console","log","JSON","stringify","data","content","recentContent","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalPlatform","platforms","totalPlatforms","totalContent","totalContents","platformData","_dashboardData$platfo2","distribution","platformDistribution","formattedData","Object","entries","map","name","value","Number","length","contentTypeData","_dashboardData$conten2","contentTypeDistribution","replace","toLowerCase","split","word","charAt","toUpperCase","slice","join","metrics","averageEngagementRate","toFixed","width","height","style","zIndex","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","entry","index","strokeDasharray","position","title","platform","platformName","contentType","Date","publishedDate","toLocaleDateString","_c","$RefreshReg$"],"sources":["E:/Official/University/Content Analytics v4/Content-Analytics-System/frontend/src/components/Dashboard/DashboardPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from '../../services/ApiService';\r\nimport {\r\n    BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer,\r\n    PieChart, Pie, Cell,\r\n} from 'recharts';\r\n\r\nconst DashboardPage = () => {\r\n    const [dashboardData, setDashboardData] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8'];\r\n\r\n    useEffect(() => {\r\n        const fetchDashboardData = async () => {\r\n            try {\r\n                // Use the correct API client and relative URL\r\n                const response = await api.get('/dashboard/summary');\r\n                console.log(\"Raw data:\", JSON.stringify(response.data));\r\n\r\n                // Add explicit logging of content\r\n                if (response.data.content) {\r\n                    console.log(\"CONTENT SECTION:\", response.data.content);\r\n                    console.log(\"RECENT CONTENT:\", response.data.content.recentContent || []);\r\n                }\r\n\r\n                setDashboardData(response.data);\r\n                setLoading(false);\r\n            } catch(err) {\r\n                console.error(\"Dashboard error:\", err);\r\n                setError('Failed to load dashboard data');\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchDashboardData();\r\n    }, []);\r\n\r\n    if (loading) return <div className=\"text-center p-10\">Loading dashboard...</div>;\r\n    if (error) return <div className=\"text-center p-10 text-red-500\">{error}</div>;\r\n    if (!dashboardData) return <div className=\"text-center p-10\">No dashboard data available</div>;\r\n\r\n    // Add safety checks for all data access\r\n    const totalPlatform = dashboardData.platforms?.totalPlatforms || 0;\r\n    const totalContent = dashboardData.content?.totalContents || 0;\r\n\r\n    const platformData = (() => {\r\n        try {\r\n            // Extract platform distribution data\r\n            const distribution = dashboardData.platforms?.platformDistribution || {};\r\n\r\n            // Convert to array format needed by charts\r\n            const formattedData = Object.entries(distribution).map(\r\n                ([name, value]) => ({ name, value: Number(value) })\r\n            );\r\n\r\n            // Add placeholder if empty\r\n            return formattedData.length > 0\r\n                ? formattedData\r\n                : [{ name: 'No Platforms', value: 1 }];\r\n        } catch (err) {\r\n            console.error(\"Error formatting platform data:\", err);\r\n            return [{ name: 'No Platforms', value: 1 }];\r\n        }\r\n    })();\r\n\r\n    const contentTypeData = (() => {\r\n        try {\r\n            // Extract content type distribution\r\n            const distribution = dashboardData.content?.contentTypeDistribution || {};\r\n\r\n            // Convert to array format needed by charts\r\n            const formattedData = Object.entries(distribution).map(\r\n                ([name, value]) => ({\r\n                    name: name.replace(/_/g, ' ').toLowerCase()\r\n                        .split(' ')\r\n                        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n                        .join(' '),\r\n                    value: Number(value)\r\n                })\r\n            );\r\n\r\n            // Add placeholder if empty\r\n            return formattedData.length > 0\r\n                ? formattedData\r\n                : [{ name: 'No Content', value: 1 }];\r\n        } catch (err) {\r\n            console.error(\"Error formatting content type data:\", err);\r\n            return [{ name: 'No Content', value: 1 }];\r\n        }\r\n    })();\r\n\r\n\r\n    return (\r\n        <div className=\"container mx-auto\">\r\n            <h1 className=\"text-3xl font-bold mb-6\">Analytics Dashboard</h1>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\r\n                {/* Platform Stats Card */}\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Platforms</h2>\r\n                    <p className=\"text-3xl font-bold\">{dashboardData?.platforms?.totalPlatforms || 0}</p>\r\n                    <p className=\"text-gray-500\">Connected platforms</p>\r\n                </div>\r\n\r\n                {/* Content Stats Card */}\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Content</h2>\r\n                    <p className=\"text-3xl font-bold\">{dashboardData?.content?.totalContents || 0}</p>\r\n                    <p className=\"text-gray-500\">Total content pieces</p>\r\n                </div>\r\n\r\n                {/* Engagement Stats Card */}\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-2\">Engagement</h2>\r\n                    <p className=\"text-3xl font-bold\">{dashboardData.metrics?.averageEngagementRate?.toFixed(2) || '0.00'}%</p>\r\n                    <p className=\"text-gray-500\">Average engagement rate</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\r\n                {/* Platform Distribution Chart */}\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-4\">Platform Distribution</h2>\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <PieChart style={{ zIndex: 10 }}>\r\n                            <Pie\r\n                                data={platformData}\r\n                                cx=\"50%\"\r\n                                cy=\"50%\"\r\n                                labelLine={false}\r\n                                outerRadius={100}\r\n                                fill=\"#8884d8\"\r\n                                dataKey=\"value\"\r\n                                label={({ name, percent }) =>\r\n                                    platformData[0].name === 'No Platforms'\r\n                                        ? 'No platforms connected yet'\r\n                                        :`${name} ${(percent * 100).toFixed(0)}%`}\r\n                                style={{ zIndex: 10 }}\r\n                            >\r\n                                {platformData.map((entry, index) => (\r\n                                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n                                ))}\r\n                            </Pie>\r\n                            <Tooltip />\r\n                        </PieChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n\r\n                {/* Content Type Distribution Chart */}\r\n                <div className=\"bg-white rounded-lg shadow p-6\">\r\n                    <h2 className=\"text-xl font-semibold mb-4\">Content Type Distribution</h2>\r\n                    <ResponsiveContainer width=\"100%\" height={300}>\r\n                        <BarChart data={contentTypeData}>\r\n                            <CartesianGrid strokeDasharray=\"3 3\" />\r\n                            <XAxis dataKey=\"name\" />\r\n                            <YAxis />\r\n                            <Tooltip />\r\n                            <Legend />\r\n                            <Bar\r\n                                dataKey=\"value\"\r\n                                fill=\"#8884d8\"\r\n                                name = \"Content Count\"\r\n                                label = {\r\n                                    contentTypeData[0].name === 'No Content'\r\n                                        ? { value: 'No content added yet', position: 'center' }\r\n                                        : { position: 'top' }\r\n                                }\r\n                            />\r\n                        </BarChart>\r\n                    </ResponsiveContainer>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Recent Content Section */}\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n                <h2 className=\"text-xl font-semibold mb-4\">Recent Content</h2>\r\n                {dashboardData?.content?.recentContent?.length > 0 ? (\r\n                    <table className=\"min-w-full\">\r\n                        <thead>\r\n                        <tr className=\"bg-gray-100\">\r\n                            <th className=\"py-2 px-4 text-left\">Title</th>\r\n                            <th className=\"py-2 px-4 text-left\">Platform</th>\r\n                            <th className=\"py-2 px-4 text-left\">Type</th>\r\n                            <th className=\"py-2 px-4 text-left\">Published</th>\r\n                            <th className=\"py-2 px-4 text-left\">Views</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {dashboardData.content.recentContent.map((content, index) => (\r\n                            <tr key={index} className={index % 2 === 0 ? 'bg-gray-50' : ''}>\r\n                                <td className=\"py-2 px-4\">{content.title}</td>\r\n                                <td className=\"py-2 px-4\">{content.platform.platformName}</td>\r\n                                <td className=\"py-2 px-4\">{content.contentType}</td>\r\n                                <td className=\"py-2 px-4\">\r\n                                    {new Date(content.publishedDate).toLocaleDateString()}\r\n                                </td>\r\n                                <td className=\"py-2 px-4\">-</td>\r\n                            </tr>\r\n                        ))}\r\n                        </tbody>\r\n                    </table>\r\n                ) : (\r\n                    <p className=\"text-gray-500\">No recent content available</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DashboardPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}