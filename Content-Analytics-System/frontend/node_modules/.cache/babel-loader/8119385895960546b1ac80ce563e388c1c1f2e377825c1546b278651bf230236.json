{"ast":null,"code":"var _jsxFileName = \"E:\\\\Official\\\\University\\\\Content Analytics v4\\\\Content-Analytics-System\\\\frontend\\\\src\\\\components\\\\Platforms\\\\AddPlatformModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport platformService from \"../../services/PlatformService\";\nimport contentService from \"../../services/PlatformService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPlatformModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [contentLink, setContentLink] = useState('');\n  const [error, setError] = useState('');\n\n  // To detect platform and content type from URL\n  const detectPlatformInfo = url => {\n    // Platform detection patterns\n    if (url.includes('youtube.com') || url.includes('youtu.be')) {\n      // YouTube detection\n      let videoId = '';\n      if (url.includes('watch?v=')) {\n        // Regular video\n        videoId = url.split('watch?v=')[1].split('&')[0];\n      } else if (url.includes('youtu.be/')) {\n        // Short\n        videoId = url.split('youtu.be/')[1].split('?')[0];\n      } else if (url.includes('shorts/')) {\n        // Shorts\n        videoId = url.split('shorts/')[1].split('?')[0];\n      }\n      return {\n        platform: 'YouTube',\n        contentId: videoId,\n        contentType: url.includes('shorts/') ? 'SHORT' : 'VIDEO'\n      };\n    } else if (url.includes('instagram.com')) {\n      // Ig detection\n      let contentId = '';\n      let contentType = 'POST';\n      if (url.includes('/p/')) {\n        // Regular post\n        contentId = url.split('/p/')[1].split('/')[0];\n      } else if (url.includes('/reel/')) {\n        // Reel\n        contentId = url.split('/reel/')[1].split('/')[0];\n        contentType = 'REEL';\n      } else if (url.includes('/stories/')) {\n        // Story\n        contentId = url.split('/stories/')[1].split('/')[1];\n        contentType = 'STORY';\n      }\n      return {\n        platform: 'Instagram',\n        contentId: contentId,\n        contentType: contentType\n      };\n    } else if (url.includes('tiktok.com')) {\n      // TikTok detection\n      let contentId = '';\n      if (url.includes('/video/')) {\n        contentId = url.split('/video/')[1].split('?')[0];\n      }\n      return {\n        platform: 'TikTok',\n        contentId: contentId,\n        contentType: 'VIDEO'\n      };\n    }\n\n    // Default return for unrecognized\n    return {\n      platform: 'Other',\n      contentId: '',\n      contentType: 'UNKNOWN'\n    };\n  };\n\n  // Handle content addition\n  const handleAddContent = async () => {\n    // Validating URL\n    if (!contentLink.trim()) {\n      setError('Please enter a valid content link');\n      return;\n    }\n    try {\n      // Detect platform and content info\n      const contentInfo = detectPlatformInfo(contentLink);\n      if (contentInfo.contentId === '') {\n        setError('Could not detect cont ID from the provided link');\n        return;\n      }\n\n      // Call service to add content\n      await contentService.addContent({\n        url: contentLink,\n        platform: contentInfo.platform,\n        contentId: contentInfo.contentId,\n        contentType: contentInfo.contentType\n      });\n\n      // Reset and close modal\n      setContentLink('');\n      setError('');\n      onClose();\n    } catch (err) {\n      setError('Failed to add content. Please try again..');\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Add New Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: contentLink,\n        onChange: e => setContentLink(e.target.value),\n        placeholder: \"Paste video/reel/post link here\",\n        className: \"w-full p-2 border rounded mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"px-4 py-2 bg-gray-200 rounded\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddContent,\n          className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n          children: \"Add Content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(AddPlatformModal, \"2SJMgsHIzrHk44s92QmXazd+NFo=\");\n_c = AddPlatformModal;\nexport default AddPlatformModal;\nvar _c;\n$RefreshReg$(_c, \"AddPlatformModal\");","map":{"version":3,"names":["React","useState","platformService","contentService","jsxDEV","_jsxDEV","AddPlatformModal","isOpen","onClose","_s","contentLink","setContentLink","error","setError","detectPlatformInfo","url","includes","videoId","split","platform","contentId","contentType","handleAddContent","trim","contentInfo","addContent","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/Official/University/Content Analytics v4/Content-Analytics-System/frontend/src/components/Platforms/AddPlatformModal.jsx"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport platformService from \"../../services/PlatformService\";\r\nimport contentService from \"../../services/PlatformService\";\r\n\r\nconst AddPlatformModal = ({ isOpen, onClose }) => {\r\n    const [contentLink, setContentLink] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    // To detect platform and content type from URL\r\n    const detectPlatformInfo = (url) => {\r\n        // Platform detection patterns\r\n        if (url.includes('youtube.com') || url.includes('youtu.be')) {\r\n            // YouTube detection\r\n            let videoId = '';\r\n\r\n            if (url.includes('watch?v=')){\r\n                // Regular video\r\n                videoId = url.split('watch?v=')[1].split('&')[0];\r\n            } else if (url.includes('youtu.be/')) {\r\n                // Short\r\n                videoId = url.split('youtu.be/')[1].split('?')[0];\r\n            } else if (url.includes('shorts/')) {\r\n                // Shorts\r\n                videoId = url.split('shorts/')[1].split('?')[0];\r\n            }\r\n\r\n            return {\r\n                platform: 'YouTube',\r\n                contentId: videoId,\r\n                contentType: url.includes('shorts/') ? 'SHORT' : 'VIDEO'\r\n            };\r\n        } else if (url.includes('instagram.com')) {\r\n            // Ig detection\r\n            let contentId = '';\r\n            let contentType = 'POST';\r\n\r\n            if (url.includes('/p/')) {\r\n                // Regular post\r\n                contentId = url.split('/p/')[1].split('/')[0];\r\n            } else if (url.includes('/reel/')) {\r\n                // Reel\r\n                contentId = url.split('/reel/')[1].split('/')[0];\r\n                contentType = 'REEL';\r\n            } else if (url.includes('/stories/')) {\r\n                // Story\r\n                contentId = url.split('/stories/')[1].split('/')[1];\r\n                contentType = 'STORY';\r\n            }\r\n\r\n            return {\r\n                platform: 'Instagram',\r\n                contentId: contentId,\r\n                contentType: contentType\r\n            };\r\n        } else if (url.includes('tiktok.com')) {\r\n            // TikTok detection\r\n            let contentId = '';\r\n\r\n            if (url.includes('/video/')) {\r\n                contentId = url.split('/video/')[1].split('?')[0];\r\n            }\r\n\r\n            return {\r\n                platform: 'TikTok',\r\n                contentId: contentId,\r\n                contentType: 'VIDEO'\r\n            };\r\n        }\r\n\r\n        // Default return for unrecognized\r\n        return {\r\n            platform: 'Other',\r\n            contentId: '',\r\n            contentType: 'UNKNOWN'\r\n        };\r\n    };\r\n\r\n    // Handle content addition\r\n    const handleAddContent = async () => {\r\n        // Validating URL\r\n        if (!contentLink.trim()) {\r\n            setError('Please enter a valid content link');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Detect platform and content info\r\n            const contentInfo = detectPlatformInfo(contentLink);\r\n\r\n            if (contentInfo.contentId === '') {\r\n                setError('Could not detect cont ID from the provided link');\r\n                return;\r\n            }\r\n\r\n            // Call service to add content\r\n            await contentService.addContent({\r\n                url: contentLink,\r\n                platform: contentInfo.platform,\r\n                contentId: contentInfo.contentId,\r\n                contentType: contentInfo.contentType\r\n            });\r\n\r\n            // Reset and close modal\r\n            setContentLink('');\r\n            setError('');\r\n            onClose();\r\n        } catch (err) {\r\n            setError('Failed to add content. Please try again..')\r\n        }\r\n    };\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n            <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\r\n                <h2 className=\"text-xl font-bold mb-4\">Add New Content</h2>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={contentLink}\r\n                    onChange={(e) => setContentLink(e.target.value)}\r\n                    placeholder=\"Paste video/reel/post link here\"\r\n                    className=\"w-full p-2 border rounded mb-4\"\r\n                />\r\n\r\n                {error && (\r\n                    <p className=\"text-red-500 mb-4\">{error}</p>\r\n                )}\r\n\r\n                <div className=\"flex justify-end space-x-2\">\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 bg-gray-200 rounded\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleAddContent}\r\n                        className=\"px-4 py-2 bg-blue-500 text-white rounded\"\r\n                    >\r\n                        Add Content\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPlatformModal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}