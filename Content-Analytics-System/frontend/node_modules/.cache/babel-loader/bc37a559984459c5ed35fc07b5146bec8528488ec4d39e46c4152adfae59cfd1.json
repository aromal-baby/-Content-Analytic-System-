{"ast":null,"code":"var _jsxFileName = \"E:\\\\Official\\\\University\\\\Content Analytics v4\\\\Content-Analytics-System\\\\frontend\\\\src\\\\components\\\\Platforms\\\\AddPlatformModal.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport platformService from '../../services/PlatformService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPlatformModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [platformLink, setPlatformLink] = useState('');\n  const [error, setError] = useState('');\n\n  // Function to detect platform from URL\n  const detectPlatform = url => {\n    const platformMappings = {\n      'youtube.com': 'YouTube',\n      'instagram.com': 'Instagram',\n      'tiktok.com': 'TikTok',\n      'twitter.com': 'Twitter',\n      'twitch.tv': 'Twitch',\n      'facebook.com': 'Facebook'\n    };\n\n    // Find matching platform\n    const platform = Object.keys(platformMappings).find(key => url.toLowerCase().includes(key));\n    return platform ? platformMappings[platform] : 'Other';\n  };\n\n  // Handle platform addition\n  const handleAddPlatform = async () => {\n    // Validate URL\n    if (!platformLink.trim()) {\n      setError('Please enter a valid platform link');\n      return;\n    }\n    try {\n      // Detect platform\n      const detectedPlatform = detectPlatform(platformLink);\n\n      // Call service to add platform\n      await platformService.addPlatform({\n        url: platformLink,\n        platform: detectedPlatform\n      });\n\n      // Reset and close modal\n      setPlatformLink('');\n      setError('');\n      onClose();\n    } catch (err) {\n      setError('Failed to add platform. Please try again.');\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded-lg shadow-xl w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-4\",\n        children: \"Add New Platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: platformLink,\n        onChange: e => setPlatformLink(e.target.value),\n        placeholder: \"Paste platform profile/channel link\",\n        className: \"w-full p-2 border rounded mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-500 mb-4\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-end space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"px-4 py-2 bg-gray-200 rounded\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddPlatform,\n          className: \"px-4 py-2 bg-blue-500 text-white rounded\",\n          children: \"Add Platform\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(AddPlatformModal, \"YrV4K7DDSHnqxBLlUZpibJ1C6B8=\");\n_c = AddPlatformModal;\nexport default AddPlatformModal;\nvar _c;\n$RefreshReg$(_c, \"AddPlatformModal\");","map":{"version":3,"names":["React","useState","platformService","jsxDEV","_jsxDEV","AddPlatformModal","isOpen","onClose","_s","platformLink","setPlatformLink","error","setError","detectPlatform","url","platformMappings","platform","Object","keys","find","key","toLowerCase","includes","handleAddPlatform","trim","detectedPlatform","addPlatform","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/Official/University/Content Analytics v4/Content-Analytics-System/frontend/src/components/Platforms/AddPlatformModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport platformService from '../../services/PlatformService';\r\n\r\nconst AddPlatformModal = ({ isOpen, onClose }) => {\r\n    const [platformLink, setPlatformLink] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    // Function to detect platform from URL\r\n    const detectPlatform = (url) => {\r\n        const platformMappings = {\r\n            'youtube.com': 'YouTube',\r\n            'instagram.com': 'Instagram',\r\n            'tiktok.com': 'TikTok',\r\n            'twitter.com': 'Twitter',\r\n            'twitch.tv': 'Twitch',\r\n            'facebook.com': 'Facebook'\r\n        };\r\n\r\n        // Find matching platform\r\n        const platform = Object.keys(platformMappings).find(key =>\r\n            url.toLowerCase().includes(key)\r\n        );\r\n\r\n        return platform ? platformMappings[platform] : 'Other';\r\n    };\r\n\r\n    // Handle platform addition\r\n    const handleAddPlatform = async () => {\r\n        // Validate URL\r\n        if (!platformLink.trim()) {\r\n            setError('Please enter a valid platform link');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Detect platform\r\n            const detectedPlatform = detectPlatform(platformLink);\r\n\r\n            // Call service to add platform\r\n            await platformService.addPlatform({\r\n                url: platformLink,\r\n                platform: detectedPlatform\r\n            });\r\n\r\n            // Reset and close modal\r\n            setPlatformLink('');\r\n            setError('');\r\n            onClose();\r\n        } catch (err) {\r\n            setError('Failed to add platform. Please try again.');\r\n        }\r\n    };\r\n\r\n    if (!isOpen) return null;\r\n\r\n    return (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\">\r\n            <div className=\"bg-white p-6 rounded-lg shadow-xl w-96\">\r\n                <h2 className=\"text-xl font-bold mb-4\">Add New Platform</h2>\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    value={platformLink}\r\n                    onChange={(e) => setPlatformLink(e.target.value)}\r\n                    placeholder=\"Paste platform profile/channel link\"\r\n                    className=\"w-full p-2 border rounded mb-4\"\r\n                />\r\n\r\n                {error && (\r\n                    <p className=\"text-red-500 mb-4\">{error}</p>\r\n                )}\r\n\r\n                <div className=\"flex justify-end space-x-2\">\r\n                    <button\r\n                        onClick={onClose}\r\n                        className=\"px-4 py-2 bg-gray-200 rounded\"\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                    <button\r\n                        onClick={handleAddPlatform}\r\n                        className=\"px-4 py-2 bg-blue-500 text-white rounded\"\r\n                    >\r\n                        Add Platform\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddPlatformModal;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMY,cAAc,GAAIC,GAAG,IAAK;IAC5B,MAAMC,gBAAgB,GAAG;MACrB,aAAa,EAAE,SAAS;MACxB,eAAe,EAAE,WAAW;MAC5B,YAAY,EAAE,QAAQ;MACtB,aAAa,EAAE,SAAS;MACxB,WAAW,EAAE,QAAQ;MACrB,cAAc,EAAE;IACpB,CAAC;;IAED;IACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACH,gBAAgB,CAAC,CAACI,IAAI,CAACC,GAAG,IACnDN,GAAG,CAACO,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,GAAG,CAClC,CAAC;IAED,OAAOJ,QAAQ,GAAGD,gBAAgB,CAACC,QAAQ,CAAC,GAAG,OAAO;EAC1D,CAAC;;EAED;EACA,MAAMO,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC;IACA,IAAI,CAACd,YAAY,CAACe,IAAI,CAAC,CAAC,EAAE;MACtBZ,QAAQ,CAAC,oCAAoC,CAAC;MAC9C;IACJ;IAEA,IAAI;MACA;MACA,MAAMa,gBAAgB,GAAGZ,cAAc,CAACJ,YAAY,CAAC;;MAErD;MACA,MAAMP,eAAe,CAACwB,WAAW,CAAC;QAC9BZ,GAAG,EAAEL,YAAY;QACjBO,QAAQ,EAAES;MACd,CAAC,CAAC;;MAEF;MACAf,eAAe,CAAC,EAAE,CAAC;MACnBE,QAAQ,CAAC,EAAE,CAAC;MACZL,OAAO,CAAC,CAAC;IACb,CAAC,CAAC,OAAOoB,GAAG,EAAE;MACVf,QAAQ,CAAC,2CAA2C,CAAC;IACzD;EACJ,CAAC;EAED,IAAI,CAACN,MAAM,EAAE,OAAO,IAAI;EAExB,oBACIF,OAAA;IAAKwB,SAAS,EAAC,4EAA4E;IAAAC,QAAA,eACvFzB,OAAA;MAAKwB,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBACnDzB,OAAA;QAAIwB,SAAS,EAAC,wBAAwB;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE5D7B,OAAA;QACI8B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE1B,YAAa;QACpB2B,QAAQ,EAAGC,CAAC,IAAK3B,eAAe,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACjDI,WAAW,EAAC,qCAAqC;QACjDX,SAAS,EAAC;MAAgC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EAEDtB,KAAK,iBACFP,OAAA;QAAGwB,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAElB;MAAK;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAC9C,eAED7B,OAAA;QAAKwB,SAAS,EAAC,4BAA4B;QAAAC,QAAA,gBACvCzB,OAAA;UACIoC,OAAO,EAAEjC,OAAQ;UACjBqB,SAAS,EAAC,+BAA+B;UAAAC,QAAA,EAC5C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT7B,OAAA;UACIoC,OAAO,EAAEjB,iBAAkB;UAC3BK,SAAS,EAAC,0CAA0C;UAAAC,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACzB,EAAA,CAtFIH,gBAAgB;AAAAoC,EAAA,GAAhBpC,gBAAgB;AAwFtB,eAAeA,gBAAgB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}